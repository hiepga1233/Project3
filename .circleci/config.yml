# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
    remove_infra:
        steps:
            - run:
                name: Delete Stack
                command: |
                  aws cloudformation delete-stack \
                    -stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
                when: on_fail
jobs:
  create_infra:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Stack
          command: |
            aws cloudformation deploy \
              --template-file aws/sample3.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-west-2
      - remove_infra
  configure_infra:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          # You can get this ID in the section where you registered the SSH Key
          fingerprints: ["fe:03:2e:e9:ad:41:c4:52:f6:79:50:94:3d:30:7c:d0"]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory main-remote.yml

  smock_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apl add --update curl
      - run:
          name: Test URL
          command: | 
            URL="https://blog.udacity.com/"
            if curl -s --head ${URL} 
            then
              return 0
            else
              return 1
            fi


  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample3-workflow:
    jobs:
   #   - create_infra
      - configure_infra
  #        requires:
    #        - create_infra
